/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ejemplo.interfaces.doce092022;

import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author thedoc
 */
public class principal extends javax.swing.JFrame {
    Object[] a;
    JTable table;
 
    ArrayList<String> brands = new ArrayList<>();
    ArrayList<Object> pack = new ArrayList<>();
    
    /**
     * Creates new form principal
     */    public principal() {
        initComponents();

        this.setResizable(false);
        this.setTitle("Enrique Cabello Delgado");
        datefield.setText(LocalDate.now().toString());
        
        
          //JSON parser object to parse read file
        JSONParser jsonParser = new JSONParser();
         
        try (FileReader reader = new FileReader("src/main/resources/files/vehicles.json"))
        {
            //Read JSON file
            Object obj = jsonParser.parse(reader);
 
            JSONArray employeeList = (JSONArray) obj;
           
             
            //Iterate over employee array
            employeeList.forEach( emp -> parseEmployeeObject( (JSONObject) emp ) );
 
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JLabel();
        model = new javax.swing.JLabel();
        Marca = new javax.swing.JLabel();
        namefield = new javax.swing.JTextField();
        price = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gas = new javax.swing.JLabel();
        pricefield = new javax.swing.JTextField();
        colorfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addbt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        gastype = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        datefield = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        caracters = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        modelcomb = new javax.swing.JComboBox<>();
        marfil = new javax.swing.JTextField();
        contract = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.white);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        name.setText("Nombre:");
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 69, -1, -1));

        model.setText("Modelo:");
        getContentPane().add(model, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 110, 47, -1));

        Marca.setText("Marca:");
        getContentPane().add(Marca, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 153, 39, -1));

        namefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namefieldActionPerformed(evt);
            }
        });
        getContentPane().add(namefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 66, 58, -1));

        price.setText("Precio:");
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 69, 85, -1));

        jLabel2.setText("Color:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 110, 85, -1));

        gas.setText("Tipo de gasolina:");
        getContentPane().add(gas, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 151, -1, 20));
        getContentPane().add(pricefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 66, 57, -1));

        colorfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorfieldActionPerformed(evt);
            }
        });
        getContentPane().add(colorfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 107, 58, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(513, 81, 152, -1));

        addbt.setText("AÃ±adir");
        addbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtActionPerformed(evt);
            }
        });
        getContentPane().add(addbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 106, 332, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre:", "Modelo:", "Marca:", "Precio:", "Color:", "Tipo de gasolina:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 186, 653, 137));

        gastype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Diesel", "Gasolina", "Hibrido", "Electrico", " " }));
        getContentPane().add(gastype, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 150, 57, -1));

        jButton1.setText("Leer");
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 149, 332, -1));
        getContentPane().add(datefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 148, 35));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre:", "Modelo:", "Marca:", "Precio:", "Color:", "Tipo de gasolina:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 336, 653, 171));

        caracters.setText("Caracteristicas");
        caracters.setEnabled(false);
        caracters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caractersMouseClicked(evt);
            }
        });
        getContentPane().add(caracters, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 514, 115, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_20_1_20.png")));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 170, 66));

        modelcomb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        modelcomb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                modelcombItemStateChanged(evt);
            }
        });
        getContentPane().add(modelcomb, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        marfil.setEditable(false);
        getContentPane().add(marfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 80, -1));

        contract.setText("contrato");
        contract.setEnabled(false);
        contract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contractMouseClicked(evt);
            }
        });
        getContentPane().add(contract, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 510, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namefieldActionPerformed

    private void addbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtActionPerformed
        
// TODO add your handling code here:
       
        boolean comprobado = false;
        boolean comprobado2 = false;
        boolean comprobado3 = false;
        boolean comprobado4 = false;
        boolean comprobado5 = false;
        boolean comprobado6 = false;
        boolean comparadofloat = false;
        String Name = null;
        String Model = null;
        String Marca = null;
        String Price = null;
        String Color = null;
        String Gas = null;
        
        
        
        
        
        Name = namefield.getText();
        Model = modelcomb.getSelectedItem().toString();
        Marca = marfil.getText().toString();
        Price = pricefield.getText().toString();
        Color = colorfield.getText();
        Gas = gastype.getSelectedItem().toString();
        
        if(Name == null){
            JOptionPane.showMessageDialog(null, "La casilla de nombre estÃ¡ vacia",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
        }else{
            comprobado = true;
        }
        
        
        if(Model == null){
            JOptionPane.showMessageDialog(null, "La casilla de Modelo estÃ¡ vacia",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
        }else{
            if(modelcomb.getSelectedIndex() != 0){
                comprobado2 = true;
            }else{
                JOptionPane.showMessageDialog(null, "Seleccione un modelo",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        if(Marca == null){
            JOptionPane.showMessageDialog(null, "La casilla de Marca estÃ¡ vacia",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
        }else{
            comprobado3 = true;
         
            
            
        }
        
        if(Price == null){
            JOptionPane.showMessageDialog(null, "La casilla de Precio estÃ¡ vacia",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
        }else{
            comprobado4 = true;
        }
        
        
        if(Color == null){
            JOptionPane.showMessageDialog(null, "La casilla de Color estÃ¡ vacia",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
        }else{
            comprobado5 = true;
        }
        
        if(Gas == null){
            JOptionPane.showMessageDialog(null, "La casilla de Gasolina estÃ¡ vacia",
                "Valor no introducido", JOptionPane.INFORMATION_MESSAGE);
        }else{
            comprobado6 = true;
        }
        
        
        if (comprobado && comprobado2 && comprobado3 && comprobado4 && comprobado5 && comprobado6) {
            
            //Find error as data doesnt compare __
            
            Scanner inp = new Scanner(pricefield.getText());
            if(inp.hasNextFloat()){
                
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                Object[] conono =  new Object[]{Name, Model, Marca, Price, Color, Gas};
                System.out.println(conono.toString());
                if(model.getRowCount() <= 0){
                    
                    model.addRow(conono);
                }else{
                    String[] compare = new String[6];
                    for (int j = 0; j < model.getRowCount(); j++) {
                            
                            for (int i = 0; i < model.getColumnCount(); i++) {
                                compare[i] = model.getValueAt(j, i).toString();
                                if(Arrays.toString(compare).equals(Arrays.toString(conono))){
                                    JOptionPane.showMessageDialog(null, "Valor repetido","Hay un valor que esta repetido", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }
                            }
                        }
                    
                        
                      
                        model.addRow(conono);
                
                }
                
                
            }else{
                JOptionPane.showMessageDialog(null, "Porfavor introduce un precio en valor numerico",
                "Valor NO NUMERICO", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
        }
    }//GEN-LAST:event_addbtActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        table = (JTable)evt.getSource();
        int row = table.getSelectedRow();
        System.out.println(row);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        a = new Object[6];
        for (int i = 0; i < model.getColumnCount(); i++) {
            a[i] = model.getValueAt(row, i);

        }
        jButton1.setEnabled(true);
        caracters.setEnabled(true);
        contract.setEnabled(true);

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if(table.getSelectedRow() != -1){

            DefaultTableModel model22 = (DefaultTableModel) jTable2.getModel();
            model22.addRow(a);
        }

    }//GEN-LAST:event_jButton1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        table = (JTable)evt.getSource();
        int row = table.getSelectedRow();
        System.out.println(row);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel model22 = (DefaultTableModel) jTable2.getModel();

        a = new Object[6];
        for (int i = 0; i < model.getColumnCount(); i++) {
            a[i] = null;

        }
        int input = JOptionPane.showConfirmDialog(null, "Â¿Seguro que deseas borrar este item?");
        System.out.println(input);
        if(input == 0){
            jButton1.setEnabled(false);
            model22.removeRow(row);
            JOptionPane.showMessageDialog(null, "Borrado Correctamente",
                "Borrado!", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jTable2MouseClicked

    private void colorfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colorfieldActionPerformed

    private void caractersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caractersMouseClicked
        // TODO add your handling code here:
        Object item = modelcomb.getSelectedItem();
            
                String image1 = ((cmitem)item).getImage1();
                String image2 = ((cmitem)item).getImage2();
                String model = ((cmitem)item).getBrand();
                String year = ((cmitem)item).getYear();
                String name = ((cmitem)item).getName();
                String speed = ((cmitem)item).getSpeed();
                String description = ((cmitem)item).getDescription();
                String doors = ((cmitem)item).getDoors();
                String gas = gastype.getSelectedItem().toString();
        Frame4 ss = new Frame4(model,name, year, doors, speed, image1, image2, gas, description);
        ss.setVisible(true);
    }//GEN-LAST:event_caractersMouseClicked

    private void modelcombItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_modelcombItemStateChanged
        // TODO add your handling code here:
        Object item = modelcomb.getSelectedItem();
            
                String value = ((cmitem)item).getBrand();
                marfil.setText(value);
    }//GEN-LAST:event_modelcombItemStateChanged

    private void contractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contractMouseClicked
        // TODO add your handling code here:
        contract cc;
        try {
            cc = new contract(namefield.getText().toString(), modelcomb.getSelectedItem().toString(), gastype.getSelectedItem().toString());
            cc.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_contractMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
                
                
            }
        });
        
        
    }
    
 private void parseEmployeeObject(JSONObject veh) 
    {
        //Get employee object within list
        JSONObject employeeObject = (JSONObject) veh.get("vehicle");
         
        //Get employee first name
        String name = (String) employeeObject.get("name");    
  
         
        //Get employee last name
        String brand = (String) employeeObject.get("brand");  
     
         
        //Get employee website name
        String doors = (String) employeeObject.get("doors");    
      
        
        String speed = (String) employeeObject.get("speed");    
     
        
        String year = (String) employeeObject.get("year");    

        
      
        
        String description = (String) employeeObject.get("description");    
    
            
            
        String image1 = (String) employeeObject.get("image1");  
        String image2 = (String) employeeObject.get("image2");  
            
            
        
        cmitem vhh = new cmitem(name, brand, doors, speed, year, description, image1, image2);
        modelcomb.addItem(vhh);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Marca;
    private javax.swing.JButton addbt;
    private javax.swing.JButton caracters;
    private javax.swing.JTextField colorfield;
    private javax.swing.JButton contract;
    private javax.swing.JLabel datefield;
    private javax.swing.JLabel gas;
    private javax.swing.JComboBox<String> gastype;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField marfil;
    private javax.swing.JLabel model;
    private javax.swing.JComboBox<Object> modelcomb;
    private javax.swing.JLabel name;
    private javax.swing.JTextField namefield;
    private javax.swing.JLabel price;
    private javax.swing.JTextField pricefield;
    // End of variables declaration//GEN-END:variables
}
